# -*- coding: utf-8 -*-
'''
给出一个数组，每个元素表示水桶高度，
水桶的最终高度由数组中的两个元素组成（由两者较小的高度决定，短板效应），
水桶的宽度由两个元素的下标差决定，求最大装水量。
'''
'''
取头尾2个木板（最后一个边Index为n)，让它们组成一个容器，则可以算出此时的盛水量。
我们假设高度较矮的那个木板的index为0，也就是说假设第一根比最后一根矮。
它是最大的——对于任何以0为边的板来说。
也就是说我们在任意再从所有板中选2个，保证选一个0的情况下 （比如说我们选0和n-1 两条边)，它的盛水量一定小于等于我们头尾的盛水量。
同理，选0和n边之间任意2条边（保证选0的情况下），0和n的盛水量都要比我们这选的任意2条边的盛水量大
'''
def maxArea(height):
    i=0
    j=len(height)-1
    area=0
    while i<j:
        area=max(area,(j-i)*min(height[i],height[j]))
        if height[i]<height[j]:
            i+=1
        if height[i]>height[j]:
            j-=1
    return area

